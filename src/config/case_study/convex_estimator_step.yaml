case_study: estimator

vmap_evaluations: True

adjacency_matrix:
  - [0, 0, 0, 0, 0, 1]
  - [0, 0, 0, 0, 0, 1]
  - [0, 0, 0, 0, 0, 1]
  - [0, 0, 0, 0, 0, 1]
  - [0, 0, 0, 0, 0, 1]
  - [0, 0, 0, 0, 0, 0]

n_design_args:
  - 1
  - 2
  - 2
  - 2
  - 3
  - 0
  

n_aux_args:
  # auxiliary arguments per edge
  (0,5): 3
  (2,5): 3
  (3,5): 3
  (4,5): 3
  (1,5): 3
  # auxiliary arguments per node
  node_0: 3
  node_1: 3
  node_2: 3
  node_3: 3
  node_4: 3
  node_5: 3

n_input_args:
  (0,5): 1
  (2,5): 1
  (3,5): 1
  (4,5): 1
  (1,5): 1
  

KS_bounds:  
  design_args:
  # unit, arg, bounds
    - - - -1
        - 1
    - - - -1
        - 1
      - - -1
        - 1
    - - - -1
        - 1
      - - -1
        - 1
    - - - -1
        - 1
      - - -1
        - 1
    - - - -1
        - 1
      - - -1
        - 1
      - - -1
        - 1
    - - - None
        - None
  aux_args:
  # global_auxiliary_args
    - - - -0.5
        - 1.0
    - - - 0.0
        - 1.0
    - - - 0.0
        - 1.0



fn_evals: 
  - 0
  - 0
  - 0
  - 0
  - 0
  - 0
  - 0

unit_op:
  - 'steady_state'
  - 'steady_state'
  - 'steady_state'
  - 'steady_state'
  - 'steady_state'
  - 'steady_state'

unit_params_fn:
  - None
  - None
  - None
  - None
  - None
  - None

n_theta:
  - 1
  - 1
  - 1
  - 1
  - 1
  - 1



parameters_samples: # list of list of dicts [node][[{c: [param], w: [param_weight in posteiror distribution]}]]  #  q = multivariate_normal([6.66e-06, 0.0010335], [[0.00001e-06, 0.000001e-08],[0.000001e-08, 0.0000005]])
  - [{'c': [0.], 'w': 1.},{'c': [0.], 'w': 1.}]
  - [{'c': [0.], 'w': 1.},{'c': [0.], 'w': 1.}]
  - [{'c': [0.], 'w': 1.},{'c': [0.], 'w': 1.}]
  - [{'c': [0.], 'w': 1.},{'c': [0.], 'w': 1.}]
  - [{'c': [0.], 'w': 1.},{'c': [0.], 'w': 1.}]
  - [{'c': [0.], 'w': 1.},{'c': [0.], 'w': 1.}]


parameters_best_estimate: # list of lists [node][[param1]] most likely estimate
  - [0.]
  - [0.]
  - [0.]
  - [0.]
  - [0.]
  - [0.]
  - [0.]

extendedDS_bounds: [None, None, None, None, None, None, None]


design_space_dimensions:
- 'N1: P1'
- 'N2: P1'
- 'N2: P2'
- 'N3: P1'
- 'N3: P2'
- 'N4: P1'
- 'N4: P2'
- 'N5: P1'
- 'N5: P2'
- 'N5: P3'
- 'G.A. 1'
- 'G.A. 2'
- 'G.A. 3'


global_n_aux_args: 3

process_space_names:
  - ['N1: P1', 'G.A. 1', 'G.A. 2', 'G.A. 3']
  - ['N2: P1', 'N2: P2', 'G.A. 1', 'G.A. 2', 'G.A. 3']
  - ['N3: P1', 'N3: P2', 'G.A. 1', 'G.A. 2', 'G.A. 3']
  - ['N4: P1', 'N4: P2', 'G.A. 1', 'G.A. 2', 'G.A. 3']
  - ['N5: P1', 'N5: P2', 'N5: P3', 'G.A. 1', 'G.A. 2', 'G.A. 3']
  - ['I1', 'I2', 'I3', 'I4', 'I5', 'G.A. 1', 'G.A. 2', 'G.A. 3']


mode:
  - backward
  #- backward-forward
  #- backward-forward
  #- forward
  #- forward-backward
  #- 'forward-backward'


evaluation_mode: 'jax-pmap' #serial